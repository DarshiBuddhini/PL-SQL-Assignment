CREATE OR REPLACE PACKAGE BODY DARSHI_BRANCH_API AS
  PROCEDURE insert_branch(branch_name_        IN VARCHAR2,
                          branch_address_     IN VARCHAR2,
                          branch_manager_     IN VARCHAR2,
                          total_war_capacity_ IN NUMBER,
                          company_id_         IN VARCHAR2) IS
    branch_id_ VARCHAR2(30);
  BEGIN
    SELECT 'BRANCH_' || TO_CHAR(S_BRANCH_ID_SEQ.NEXTVAL)
      INTO branch_id_
      FROM DUAL;
  
    INSERT INTO darshi_branch_tab
      (branch_id,
       branch_name,
       branch_address,
       branch_manager,
       total_war_capacity,
       company_id)
    VALUES
      (branch_id_,
       branch_name_,
       branch_address_,
       branch_manager_,
       total_war_capacity_,
       company_id_);
  END insert_branch;

  --procedure for update
  PROCEDURE update_branch(branch_id_              IN VARCHAR2,
                          new_branch_name_        IN VARCHAR2,
                          new_branch_address_     IN VARCHAR2,
                          new_branch_manager_     IN VARCHAR2,
                          new_total_war_capacity_ IN NUMBER,
                          new_company_id_         IN VARCHAR2) IS
  BEGIN
    UPDATE darshi_branch_tab
       SET branch_name        = new_branch_name_,
           branch_address     = new_branch_address_,
           branch_manager     = new_branch_manager_,
           total_war_capacity = new_total_war_capacity_,
           company_id         = new_company_id_
     WHERE branch_id = branch_id_;
  END update_branch;

  --procedure delete
  PROCEDURE delete_branch(branch_id_ IN VARCHAR2) IS
  BEGIN
    DELETE FROM darshi_branch_tab WHERE branch_id = branch_id_;
  END delete_branch;

  -- Create function for getting branch name
  FUNCTION GET_BRANCH_NAME(branch_id_ IN VARCHAR2) RETURN VARCHAR2 IS
    result_ VARCHAR2(200);
  
    CURSOR get_branch_name IS
      SELECT branch_name
        FROM darshi_branch_tab
       WHERE branch_id = branch_id_;
  
  BEGIN
    OPEN get_branch_name;
    FETCH get_branch_name
      INTO result_;
    CLOSE get_branch_name;
  
    RETURN result_;
  END GET_BRANCH_NAME;

  -- Create function for getting branch address
  FUNCTION GET_BRANCH_ADDRESS(branch_id_ IN VARCHAR2) RETURN VARCHAR2 IS
    result_ VARCHAR2(1000);
  
    CURSOR get_branch_address IS
      SELECT branch_address
        FROM darshi_branch_tab
       WHERE branch_id = branch_id_;
  
  BEGIN
    OPEN get_branch_address;
    FETCH get_branch_address
      INTO result_;
    CLOSE get_branch_address;
  
    RETURN result_;
  END GET_BRANCH_ADDRESS;

  -- Create function for getting branch branch_manager
  FUNCTION GET_BRANCH_MANAGER(branch_id_ IN VARCHAR2) RETURN VARCHAR2 IS
    result_ VARCHAR2(200);
  
    CURSOR get_branch_manager IS
      SELECT branch_manager
        FROM darshi_branch_tab
       WHERE branch_id = branch_id_;
  
  BEGIN
    OPEN get_branch_manager;
    FETCH get_branch_manager
      INTO result_;
    CLOSE get_branch_manager;
  
    RETURN result_;
  END GET_BRANCH_MANAGER;

  -- Create function for getting total war capacity
  FUNCTION GET_TOTAL_WAR_CAPACITY(branch_id_ IN VARCHAR2) RETURN NUMBER IS
    result_ NUMBER;
  
    CURSOR get_total_war_capacity IS
      SELECT total_war_capacity
        FROM darshi_branch_tab
       WHERE branch_id = branch_id_;
  
  BEGIN
    OPEN get_total_war_capacity;
    FETCH get_total_war_capacity
      INTO result_;
    CLOSE get_total_war_capacity;
  
    RETURN result_;
  END GET_TOTAL_WAR_CAPACITY;

  -- Create function for getting remaining war capacity

  -- GET REMAINING CAPACITY (By branch_id)
  FUNCTION GET_REMN_CAP(branch_id_ IN VARCHAR2) RETURN NUMBER IS
    result_ NUMBER;
    CURSOR GET_REM_CAP IS
      SELECT ((SELECT SUM(total_war_capacity) as total_cap
                 FROM darshi_branch_tab
                WHERE branch_id = branch_id_) -
             (SELECT COALESCE(SUM(maxVolume), 0) AS total_max_vol
                 FROM darshi_container_tab
                WHERE containerID IN
                      (SELECT containerID
                         FROM darshi_storage_tab
                        WHERE status = 'Active' AND branch_id = branch_id_))) as remaining_used_vol
        FROM dual;
  
  BEGIN
    OPEN GET_REM_CAP;
    FETCH GET_REM_CAP
      INTO result_;
    CLOSE GET_REM_CAP;
    RETURN result_;
  END GET_REMN_CAP;

  
  --get current inventory information
  PROCEDURE GET_CURRENT_INVENTORY(branch_id_ IN VARCHAR2) IS
    CURSOR inventory_cursor IS
      SELECT d.containerID, 
             d.maxVolume,
             s.status
        FROM darshi_container_tab d JOIN darshi_storage_tab s ON d.containerID = s.containerID
       WHERE s.branch_id = branch_id_;
  
    v_containerID darshi_container_tab.containerID%TYPE; 
    v_maxVolume darshi_container_tab.maxVolume%TYPE;
    v_status    darshi_storage_tab.status%TYPE;
  BEGIN
    OPEN inventory_cursor;
    LOOP
      FETCH inventory_cursor
        INTO v_containerID, v_maxVolume, v_status;
      EXIT WHEN inventory_cursor%NOTFOUND;
    
      DBMS_OUTPUT.PUT_LINE('Container ID: ' || v_containerID);
      DBMS_OUTPUT.PUT_LINE('Max Volume: ' || v_maxVolume);
      DBMS_OUTPUT.PUT_LINE('Status: ' || v_status);
      
    END LOOP;
    CLOSE inventory_cursor;
  END GET_CURRENT_INVENTORY;
  
END DARSHI_BRANCH_API;
/